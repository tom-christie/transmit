% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_functions.R
\name{transmit_signal}
\alias{transmit_signal}
\title{Encode the signal, add noise, and decode the signal}
\usage{
transmit_signal(codebook, symbol, signal_power, noise_power,
  duration_in_seconds, prior_distribution = c(), time_interval = 0.1,
  entropy_threshold = 0.1, return_posterior_at_stop_time = FALSE,
  return_posterior_trace = FALSE, leak_symbols = NA,
  leak_powers = NA)
}
\arguments{
\item{codebook}{constructed using construct_codebook function}

\item{symbol}{symbol to transmit. Must be defined in the codebook.}

\item{signal_power}{spikes per second allocated to signal process}

\item{noise_power}{spikes per second allocated to every process (including signal process)}

\item{duration_in_seconds}{number of time (in seconds) to simulate for -- limits max decoding time. Signals not decoded by this time will be interpreted as 'NA'}

\item{prior_distribution}{initial guess at the distribution of messages. Influences decoding times.}

\item{time_interval}{the interval at which to perform inference}

\item{entropy_threshold}{transmission stops after entropy reaches this threshold}

\item{return_posterior_at_stop_time}{returns posterior values at stop time}

\item{return_posterior_trace}{return trace of posterior values for every time step}

\item{leak_symbols}{array of symbols 'accidentally' allocated signal power}

\item{leak_powers}{array of signal powers to allocated to leak_symbols}
}
\value{
returns which symbol is decided plus response time and which symbol was sent
}
\description{
Helper function to encapsulate function calls for a 'signal transmission' event
}
\examples{

}
